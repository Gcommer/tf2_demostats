use enumset::EnumSetType;
use num_enum::{IntoPrimitive, TryFromPrimitive};
use serde::{Deserialize, Serialize};

#[derive(
    Copy, Clone, Deserialize, Serialize, IntoPrimitive, TryFromPrimitive, PartialEq, Debug, Default,
)]
#[repr(u16)]
pub enum RoundState {
    #[default]
    Init = 0,
    Pregame = 1,
    StartGame = 2,
    PreRound = 3,
    Running = 4,
    TeamWin = 5,
    Restart = 6,
    Stalemate = 7,
    GameOver = 8,
    Bonus = 9,
    BetweenRounds = 10,
}

pub const INVALID_HANDLE: u32 = 0x1fffff;
pub const ENTITY_ON_GROUND: u16 = 1;
pub const ENTITY_IN_WATER: u16 = 1 << 9;

#[derive(
    Copy, Clone, Deserialize, Serialize, IntoPrimitive, TryFromPrimitive, PartialEq, Debug,
)]
#[repr(u16)]
pub enum DamageType {
    Normal = 0,
    Headshot = 1,
    Backstab = 2,
    Burning = 3,
    WrenchFix = 4,
    Minigun = 5,
    Suicide = 6,
    TauntHadouken = 7,
    BurningFlare = 8,
    TauntHighNoon = 9,
    TauntGrandSlam = 10,
    PenetrateMyTeam = 11,
    PenetrateAllPlayers = 12,
    TauntFencing = 13,
    PenetrateNonburningTeammate = 14,
    TauntArrowStab = 15,
    Telefrag = 16,
    BurningArrow = 17,
    Flyingburn = 18,
    PumpkinBomb = 19,
    Decapitation = 20,
    TauntGrenade = 21,
    Baseball = 22,
    ChargeImpact = 23,
    TauntBarbarianSwing = 24,
    AirStickyBurst = 25,
    DefensiveSticky = 26,
    Pickaxe = 27,
    RocketDirecthit = 28,
    TauntUberslice = 29,
    PlayerSentry = 30,
    StandardSticky = 31,
    ShotgunRevengeCrit = 32,
    TauntEngineerGuitarSmash = 33,
    Bleeding = 34,
    GoldWrench = 35,
    CarriedBuilding = 36,
    ComboPunch = 37,
    TauntEngineerArmKill = 38,
    FishKill = 39,
    TriggerHurt = 40,
    DecapitationBoss = 41,
    StickbombExplosion = 42,
    AegisRound = 43,
    FlareExplosion = 44,
    BootsStomp = 45,
    Plasma = 46,
    PlasmaCharged = 47,
    PlasmaGib = 48,
    PracticeSticky = 49,
    EyeballRocket = 50,
    HeadshotDecapitation = 51,
    TauntArmageddon = 52,
    FlarePellet = 53,
    Cleaver = 54,
    CleaverCrit = 55,
    SapperRecorderDeath = 56,
    MerasmusPlayerBomb = 57,
    MerasmusGrenade = 58,
    MerasmusZap = 59,
    MerasmusDecapitation = 60,
    CannonballPush = 61,
    TauntAllclassGuitarRiff = 62,
    Throwable = 63,
    ThrowableKill = 64,
    SpellTeleport = 65,
    SpellSkeleton = 66,
    SpellMirv = 67,
    SpellMeteor = 68,
    SpellLightning = 69,
    SpellFireball = 70,
    SpellMonoculus = 71,
    SpellBlastjump = 72,
    SpellBats = 73,
    SpellTiny = 74,
    Kart = 75,
    GiantHammer = 76,
    RuneReflect = 77,
    DragonsFuryIgnite = 78,
    DragonsFuryBonusBurning = 79,
    SlapKill = 80,
    Croc = 81,
    TauntGasBlast = 82,
    AxtinguisherBoosted = 83,
}

#[derive(Deserialize, Serialize, IntoPrimitive, TryFromPrimitive, PartialEq, Debug)]
#[repr(u16)]
pub enum WeaponId {
    WeaponNone = 0,
    WeaponBat = 1,
    WeaponBatWood = 2,
    WeaponBottle = 3,
    WeaponFireaxe = 4,
    WeaponClub = 5,
    WeaponCrowbar = 6,
    WeaponKnife = 7,
    WeaponFists = 8,
    WeaponShovel = 9,
    WeaponWrench = 10,
    WeaponBonesaw = 11,
    WeaponShotgunPrimary = 12,
    WeaponShotgunSoldier = 13,
    WeaponShotgunHwg = 14,
    WeaponShotgunPyro = 15,
    WeaponScattergun = 16,
    WeaponSniperrifle = 17,
    WeaponMinigun = 18,
    WeaponSmg = 19,
    WeaponSyringegunMedic = 20,
    WeaponTranq = 21,
    WeaponRocketlauncher = 22,
    WeaponGrenadelauncher = 23,
    WeaponPipebomblauncher = 24,
    WeaponFlamethrower = 25,
    WeaponGrenadeNormal = 26,
    WeaponGrenadeConcussion = 27,
    WeaponGrenadeNail = 28,
    WeaponGrenadeMirv = 29,
    WeaponGrenadeMirvDemoman = 30,
    WeaponGrenadeNapalm = 31,
    WeaponGrenadeGas = 32,
    WeaponGrenadeEmp = 33,
    WeaponGrenadeCaltrop = 34,
    WeaponGrenadePipebomb = 35,
    WeaponGrenadeSmokeBomb = 36,
    WeaponGrenadeHeal = 37,
    WeaponGrenadeStunball = 38,
    WeaponGrenadeJar = 39,
    WeaponGrenadeJarMilk = 40,
    WeaponPistol = 41,
    WeaponPistolScout = 42,
    WeaponRevolver = 43,
    WeaponNailgun = 44,
    WeaponPda = 45,
    WeaponPdaEngineerBuild = 46,
    WeaponPdaEngineerDestroy = 47,
    WeaponPdaSpy = 48,
    WeaponBuilder = 49,
    WeaponMedigun = 50,
    WeaponGrenadeMirvbomb = 51,
    WeaponFlamethrowerRocket = 52,
    WeaponGrenadeDemoman = 53,
    WeaponSentryBullet = 54,
    WeaponSentryRocket = 55,
    WeaponDispenser = 56,
    WeaponInvis = 57,
    WeaponFlaregun = 58,
    WeaponLunchbox = 59,
    WeaponJar = 60,
    WeaponCompoundBow = 61,
    WeaponBuffItem = 62,
    WeaponPumpkinBomb = 63,
    WeaponSword = 64,
    WeaponRocketlauncherDirecthit = 65,
    WeaponLifeline = 66,
    WeaponLaserPointer = 67,
    WeaponDispenserGun = 68,
    WeaponSentryRevenge = 69,
    WeaponJarMilk = 70,
    WeaponHandgunScoutPrimary = 71,
    WeaponBatFish = 72,
    WeaponCrossbow = 73,
    WeaponStickbomb = 74,
    WeaponHandgunScoutSecondary = 75,
    WeaponSodaPopper = 76,
    WeaponSniperrifleDecap = 77,
    WeaponRaygun = 78,
    WeaponParticleCannon = 79,
    WeaponMechanicalArm = 80,
    WeaponDrgPomson = 81,
    WeaponBatGiftwrap = 82,
    WeaponGrenadeOrnamentBall = 83,
    WeaponFlaregunRevenge = 84,
    WeaponPepBrawlerBlaster = 85,
    WeaponCleaver = 86,
    WeaponGrenadeCleaver = 87,
    WeaponStickyBallLauncher = 88,
    WeaponGrenadeStickyBall = 89,
    WeaponShotgunBuildingRescue = 90,
    WeaponCannon = 91,
    WeaponThrowable = 92,
    WeaponGrenadeThrowable = 93,
    WeaponPdaSpyBuild = 94,
    WeaponGrenadeWaterballoon = 95,
    WeaponHarvesterSaw = 96,
    WeaponSpellbook = 97,
    WeaponSpellbookProjectile = 98,
    WeaponSniperrifleClassic = 99,
    WeaponParachute = 100,
    WeaponGrapplinghook = 101,
    WeaponPasstimeGun = 102,
    WeaponSniperrifleRevolver = 103,
    WeaponChargedSmg = 104,
}

#[repr(u8)]
#[derive(Debug, Clone, Serialize, Deserialize, PartialEq, TryFromPrimitive)]
pub enum PlayerAnim {
    AttackPrimary,
    AttackSecondary,
    AttackGrenade,
    Reload,
    ReloadLoop,
    ReloadEnd,
    Jump,
    Swim,
    Die,
    FlinchChest,
    FlinchHead,
    FlinchLeftarm,
    FlinchRightarm,
    FlinchLeftleg,
    FlinchRightleg,
    Doublejump,
    Cancel,
    Spawn,
    SnapYaw,
    Custom, // Used to play specific activities
    CustomGesture,
    CustomSequence, // Used to play specific sequences
    CustomGestureSequence,
    AttackPre,
    AttackPost,
    Grenade1Draw,
    Grenade2Draw,
    Grenade1Throw,
    Grenade2Throw,
    VoiceCommandGesture,
    DoublejumpCrouch,
    StunBegin,
    StunMiddle,
    StunEnd,
    PasstimeThrowBegin,
    PasstimeThrowMiddle,
    PasstimeThrowEnd,
    PasstimeThrowCancel,
    AttackPrimarySuper,
}

#[repr(u16)]
#[derive(Debug, Serialize, Deserialize, TryFromPrimitive, EnumSetType)]
#[enumset(repr = "u16")]
pub enum Death {
    Domination = 0,
    AssisterDomination = 1,
    Revenge = 2,
    AssisterRevenge = 3,
    FirstBlood = 4,
    Feign = 5,
    Interrupted = 6,
    Gibbed = 7,
    Purgatory = 8,
    Miniboss = 9,
    Australium = 10,
}

#[repr(u16)]
#[derive(Debug, Serialize, Deserialize, TryFromPrimitive, EnumSetType)]
#[enumset(repr = "u128")]
pub enum PlayerCondition {
    Aiming = 0, // Sniper and heavy
    Zoomed = 1,
    Disguising = 2,
    Disguised = 3,
    Stealthed = 4,
    Invulnerable = 5,
    Teleported = 6,
    Taunting = 7,
    InvulnerableWearingOff = 8,
    StealthedBlink = 9,
    SelectedToTeleport = 10,
    CritBoosted = 11, // unused? see the other variants; and kritz seems to be on _condition_bits
    TemporaryDamageBonus = 12,
    FeignDeath = 13,
    Phase = 14,
    Stunned = 15,
    Offensebuff = 16,
    ShieldCharge = 17,
    DemoBuff = 18,
    EnergyBuff = 19,
    RadiusHeal = 20,
    HealthBuff = 21,
    Burning = 22,
    HealthOverhealed = 23,
    Urine = 24,
    Bleeding = 25,
    DefenseBuff = 26,
    MadMilk = 27,
    MegaHeal = 28,
    RegenOnDamageBuff = 29,
    MarkedForDeath = 30,
    NoHealingDamageBuff = 31,
    SpeedBoost = 32,
    CritBoostedPumpkin = 33,
    CritBoostedUserBuff = 34,
    CritBoostedDemoCharge = 35,
    SodaPopperHype = 36,
    CritBoostedFirstBlood = 37,
    CritBoostedBonusTime = 38,
    CritBoostedCtfCapture = 39,
    CritBoostedOnKill = 40,
    CannotSwitchFromMelee = 41,
    DefenseBuffNoCritBlock = 42,
    ReprogrammedBot = 43,
    CritBoostedRageBuff = 44,
    DefenseBuffHigh = 45,
    SniperchargeRageBuff = 46,
    DisguiseWearingOff = 47,
    MarkedForDeathSilent = 48,
    DisguisedAsDispenser = 49,
    BotSapped = 50,
    InvulnerableHideUnlessDamaged = 51,
    InvulnerableUserBuff = 52,
    HalloweenBombHead = 53,
    HalloweenThriller = 54,
    RadiushealOnDamage = 55,
    CritBoostedCardEffect = 56,
    InvulnerableCardEffect = 57,
    MedigunUberBulletResist = 58,
    MedigunUberBlastResist = 59,
    MedigunUberFireResist = 60,
    MedigunSmallBulletResist = 61,
    MedigunSmallBlastResist = 62,
    MedigunSmallFireResist = 63,
    StealthedUserBuff = 64,
    MedigunDebuff = 65,
    StealthedUserBuffFading = 66,
    BulletImmune = 67,
    BlastImmune = 68,
    FireImmune = 69,
    PreventDeath = 70,
    MvmBotStunRadiowave = 71,
    HalloweenSpeedBoost = 72,
    HalloweenQuickHeal = 73,
    HalloweenGiant = 74,
    HalloweenTiny = 75,
    HalloweenInHell = 76,
    HalloweenGhostMode = 77,
    MinicritboostedOnKill = 78,
    ObscuredSmoke = 79,
    Parachute = 80,
    BlastJumping = 81,
    HalloweenKart = 82,
    HalloweenKartDash = 83,
    BalloonHead = 84,
    MeleeOnly = 85,
    SwimmingCurse = 86,
    FreezeInput = 87,
    HalloweenKartCage = 88,
    Donotuse0 = 89,
    RuneStrength = 90,
    RuneHaste = 91,
    RuneRegen = 92,
    RuneResist = 93,
    RuneVampire = 94,
    RuneReflect = 95,
    RunePrecision = 96,
    RuneAgility = 97,
    Grapplinghook = 98,
    GrapplinghookSafefall = 99,
    GrapplinghookLatched = 100,
    GrapplinghookBleeding = 101,
    AfterburnImmune = 102,
    RuneKnockout = 103,
    RuneImbalance = 104,
    CritBoostedRuneTemp = 105,
    PasstimeInterception = 106,
    SwimmingNoEffects = 107,
    Purgatory = 108,
    RuneKing = 109,
    RunePlague = 110,
    RuneSupernova = 111,
    Plague = 112,
    KingBuffed = 113,
    TeamGlows = 114,
    KnockedIntoAir = 115,
    CompetitiveWinner = 116,
    CompetitiveLoser = 117,
    HealingDebuff = 118,
    PasstimePenaltyDebuff = 119,
    GrappledToPlayer = 120,
    GrappledByPlayer = 121,
    ParachuteDeployed = 122,
    GasPasser = 123,
    BurningPyro = 124,
    ThermalThrusterJumping = 125,
    LostFooting = 126,
    AirCurrent = 127,
    // These are in Cond4 -- ignore for now so that we can fit in a u128
    //
    // HalloweenHellHeal = 128,
    // PowerupModeDominant = 129,
    // ImmuneToPushback = 130,
}
//pub const LAST_CONDITION: PlayerCondition = PlayerCondition::GrappledByPlayer;
